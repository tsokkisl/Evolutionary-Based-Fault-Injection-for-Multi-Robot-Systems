@namespace(uri="project-faults", prefix="")

package project;

import "platform:/resource/Project/ecore/mission.ecore";

/* This DSL is responsible for defining the faults included in
* a fault scenario which are provided by the user in order to
* evaluate their criticality through the genetic algorithm 
*/

class FaultClass {

}

class AffectPredefinedMessages extends FaultClass {
	ref project.Message affectedMessage;
}

/* Delay Message */
class DelayMessage extends AffectPredefinedMessages {
	attr double delay;
}

/* Block Message */
class BlockMessage extends AffectPredefinedMessages {
	attr double blockDuration;
}

class BlockSentMessages extends BlockMessage {

}

class BlockReceivedMessages extends BlockMessage {
	
}

/* Modify Message */
class ModifyMessage extends AffectPredefinedMessages {
	
}

/* ------------------------------------------------------ */

class ModifyIntMessage extends ModifyMessage {
	
}

class RandomRemainingEnergyCapacity extends ModifyIntMessage {
	attr int LOWER_BOUND;
	attr int UPPER_BOUND;
}

class ZeroRemainingEnergyCapacity extends ModifyIntMessage {
	attr int CAPACITY = 0;
}

class FixedRemainingEnergyCapacity extends ModifyIntMessage {
	attr int FIXED_VAL;
}

class IncrementRemainingEnergyCapacityReport extends ModifyIntMessage {
	attr int INCREMENT_VAL;
}

class DecrementRemainingEnergyCapacityReport extends ModifyIntMessage {
	attr int DECREMENT_VAL;
}

/* ------------------------------------------------------ */

class ModifyDoubleMessage extends ModifyMessage {
	
}

class RandomSpeed extends ModifyDoubleMessage {
	attr double RANDOM_VAL;
}

class ZeroSpeed extends ModifyDoubleMessage {
	attr double SPEED = 0;
}

class FixedSpeed extends ModifyDoubleMessage {
	attr double FIXED_VAL;
}

class RandomSampleRate extends ModifyDoubleMessage {
	attr Double LOWER_BOUND;
	attr Double UPPER_BOUND;
}

class FixedSampleRate extends ModifyDoubleMessage {
	attr double FIXED_VAL;
}

class IncrementSpeed extends ModifyDoubleMessage {
	attr double PERCENTAGE;
}

class DecrementSpeed extends ModifyDoubleMessage {
	attr double PERCENTAGE;
}

class IncrementSampleRate extends ModifyDoubleMessage {
	attr double PERCENTAGE;
}

class DecrementSampleRate extends ModifyDoubleMessage {
	attr double PERCENTAGE;
}

/* ------------------------------------------------------ */

class ModifyStringMessage extends ModifyMessage {
	
}

class FixedEmptyStringMessage extends ModifyStringMessage {
	attr String FIXED_VAL = ""; 	
}

class RandomStringMessage extends ModifyStringMessage {
	attr String RANDOM_VAL;
}

/* ------------------------------------------------------ */

class ModifyCoordinatesMessage extends ModifyMessage {
	attr int NEW_X;
	attr int NEW_Y;
	attr int NEW_Z;
}

class FixedRobotCoordinates extends ModifyCoordinatesMessage {
	
}

class RandomRobotCoordinates extends ModifyCoordinatesMessage {

}

class FixedObstacleCoordinates extends ModifyCoordinatesMessage {
	
}

class RandomObstacleCoordinates extends ModifyCoordinatesMessage {
	
}

/* Generate fake messages */
class GenerateFakeCommands extends FaultClass {
	val project.Message fakeMessage;
}

class StartRobot extends GenerateFakeCommands {
	ref project.Robot[1] affectedRobot;
}

class StopRobot extends GenerateFakeCommands {
	ref project.Robot[1] affectedRobot;
}

class ActivateSensor extends GenerateFakeCommands {
	ref project.Sensor[1] affectedSensor;
}

class DeactivateSensor extends GenerateFakeCommands {
	ref project.Sensor[1] affectedSensor;
}

class Fault {
	attr String name;
	attr double faultStart;
	attr double faultFinish;
	attr double faultProbability;
	val FaultClass[1] type;
}